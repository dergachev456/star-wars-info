{"version":3,"sources":["components/Header/Header.js","components/EntitiesList/EntitiesList.js","store/actions/mainActonCreator.js","components/EntitiesList/EntitiesListContainer.js","store/constants.js","components/Entity/Entity.js","functions.js","components/Entity/EntityContainer.js","components/EntitiesPage/EntitiesPage.js","components/EntitiesPage/EntitiesPageContainer.js","components/Loader/Loader.js","components/HOCs/LoadingHOC.js","components/ErrorPage/ErrorPage.js","components/SingleEntityPage/SingleEntityPage.js","fields_to_display.js","components/SingleEntityPage/SingleEntityPageContainer.js","App.js","store/actions/dataActionCreator.js","store/reducers/data.js","store/reducers/main.js","store/reducers/index.js","store/store.js","index.js"],"names":["Header","to","className","EntitiesList","props","setSelectedEntity","entities","map","entity","index","onClick","key","EntitiesListContainer","this","data","Object","keys","Component","connect","state","type","payload","Entity","onChangeSearchText","event","setSearchText","target","value","selectedEntity","searchText","getId","switchSortOrder","sortOrderToHeight","placeholder","onChange","obj","url","name","title","array","split","length","getEntity","sortBy","arr","param","orderToHight","sort","a","b","filterBy","filter","elem","toLowerCase","includes","EntityContainer","main","EntitiesPage","EntitiesPageContainer","sortedData","filteredData","Loader","LoadingHOC","loadingProp","WrappedComponent","prop","undefined","hasOwnProperty","constructor","ErrorPage","SingleEntityPage","fieldsToRender","getLinks","field","Math","random","Array","isArray","fieldsToDisplay","films","director","producer","episode","date","characters","planets","vehicles","starships","species","people","height","mass","gender","diameter","climate","population","residents","classification","designation","language","model","manufacturer","passengers","pilots","consumables","SingleEntityPageContainer","id","find","window","scrollTo","match","params","currentEntity","AppComponentUI","exact","path","component","AppComponent","App","JSON","parse","localStorage","getItem","loadData","dispatch","isNotLastPage","pageNum","fetch","response","json","results","concat","next","DATA","load","namespace","initialState","rootReducer","combineReducers","action","middleware","save","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3d41a3f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <Link to=\"/\" className=\"header__logo\">Star Wars info</Link>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './EntitiesList.css'\r\nexport default function EntitiesList(props) {\r\n    const { setSelectedEntity, entities } = props;\r\n    return (\r\n        <div className=\"entities-list\">\r\n            {\r\n                entities.map((entity, index) => {\r\n                    return (\r\n                        <div\r\n                            onClick={() => setSelectedEntity(entity)}\r\n                            key={entity + index}\r\n                            className=\"entities-list__entity\"\r\n                        >\r\n                            <button className=\"entities-list__entity-title\">{entity}</button>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { SET_SELECTED_ENTITY, SET_SEARCH_TEXT, SWITCH_SORT_ORDER} from '../constants';\r\n\r\nexport const setSelectedEntity = (entity) => ({\r\n    type: SET_SELECTED_ENTITY,\r\n    payload: entity\r\n});\r\n\r\nexport const setSearchText = ( value ) => ({\r\n    type: SET_SEARCH_TEXT,\r\n    payload: value\r\n})\r\n\r\nexport const switchSortOrder = () => ({\r\n    type: SWITCH_SORT_ORDER,\r\n})","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport EntitiesList from './EntitiesList';\r\nimport { setSelectedEntity } from '../../store/actions/mainActonCreator';\r\n\r\nclass EntitiesListContainer extends Component {\r\n    render() {\r\n        const { setSelectedEntity, data } = this.props;\r\n        return (\r\n            <EntitiesList\r\n                setSelectedEntity={setSelectedEntity}\r\n                entities={Object.keys(data)}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default connect(state => ({\r\n    data: state.data,\r\n}), { setSelectedEntity })(EntitiesListContainer);\r\n","export const LOAD_DATA = 'LOAD_DATA';\r\n\r\nexport const SET_SELECTED_ENTITY = 'SET_SELECTED_ENTITY';\r\n\r\nexport const SET_SEARCH_TEXT = 'SET_SEARCH_TEXT';\r\n\r\nexport const SWITCH_SORT_ORDER = 'SWITCH_SORT_ORDER';","import React, { Component } from 'react'\r\nimport './Entity.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Entity extends Component {\r\n    onChangeSearchText = event => {\r\n        this.props.setSearchText(event.target.value);\r\n    }\r\n    render() {\r\n        const { selectedEntity, searchText, getId, data, switchSortOrder, sortOrderToHeight } = this.props;\r\n        return (\r\n            <div className=\"entity\">\r\n                <div onClick={switchSortOrder} className=\"entity__title-container\">\r\n                    <h1 className=\"entity__title\" >{selectedEntity}</h1>\r\n                    {\r\n                        sortOrderToHeight ? (<span className=\"entity__arrow\">&#8595;</span>) : (<span className=\"entity__arrow\">&#8593;</span>)\r\n                    }\r\n                </div>\r\n                <input placeholder=\"search..\" className=\"entity__input\" value={searchText} onChange={this.onChangeSearchText} type=\"search\" />\r\n                <div className=\"entity__cards\">\r\n                    {\r\n                        data.map(obj => {\r\n                            return (\r\n                                <div key={getId(obj.url)} className=\"entity__card\">\r\n                                    <Link className=\"entity__link\" to={`/${selectedEntity}/${getId(obj.url)}`}>{obj.name || obj.title}</Link>\r\n                                    <h2 className=\"entity__details\">details &#8594;</h2>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const getId = (url) => {\r\n    const array = url.split('/');\r\n    return array[array.length - 2];\r\n}\r\n\r\nexport const getEntity = (url) => {\r\n    const array = url.split('/');\r\n    return array[array.length - 3];\r\n}\r\n\r\nexport const sortBy = (arr, param, orderToHight) => {\r\n    let obj = [...arr];\r\n    if (orderToHight === false) {\r\n        obj.sort((a, b) => a[param] < b[param] ? 1 : -1);\r\n    } else {\r\n        obj.sort((a, b) => a[param] > b[param] ? 1 : -1);\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport const filterBy = (arr, param, value) => {\r\n    const result = arr.filter(elem => {\r\n        return elem[param].toLowerCase().includes(value.toLowerCase())\r\n    })\r\n    return result;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Entity from './Entity';\r\nimport { setSearchText, switchSortOrder } from '../../store/actions/mainActonCreator';\r\nimport { getId } from '../../functions.js'\r\nclass EntityContainer extends Component {\r\n    render() {\r\n        const { setSearchText, data, switchSortOrder } = this.props;\r\n        const { searchText, selectedEntity, sortOrderToHeight } = this.props.main;\r\n\r\n        return (\r\n            <Entity\r\n                data={data}\r\n                getId={getId}\r\n                selectedEntity={selectedEntity}\r\n                switchSortOrder={switchSortOrder}\r\n                sortOrderToHeight={sortOrderToHeight}\r\n                setSearchText={setSearchText}\r\n                searchText={searchText}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state => ({\r\n    main: state.main,\r\n}), { setSearchText, switchSortOrder })(EntityContainer);\r\n","import React from 'react'\r\nimport EntitiesListContainer from '../EntitiesList/EntitiesListContainer';\r\nimport EntityContainer from '../Entity/EntityContainer';\r\n\r\nexport default function EntitiesPage(props){\r\n        const {data} = props;\r\n        return (\r\n            <div>\r\n                    <EntitiesListContainer/>\r\n                    <EntityContainer\r\n                        data={data}\r\n                    />\r\n            </div>\r\n        )\r\n}","import React, { Component } from 'react'\r\nimport EntitiesPage from './EntitiesPage'\r\nimport { connect } from 'react-redux';\r\nimport {sortBy, filterBy} from '../../functions.js'\r\n\r\nclass EntitiesPageContainer extends Component {\r\n    render() {\r\n        const {selectedEntity, searchText, sortOrderToHeight} = this.props.main;\r\n\r\n        const data = this.props.data[selectedEntity];\r\n        let sortedData;\r\n        let filteredData;\r\n\r\n        if (selectedEntity === 'films') {\r\n            sortedData = sortBy(data, 'title', sortOrderToHeight)\r\n            filteredData = filterBy(sortedData, 'title', searchText)\r\n        } else {\r\n            sortedData = sortBy(data, 'name', sortOrderToHeight)\r\n            filteredData = filterBy(sortedData, 'name', searchText)\r\n        }\r\n        return (\r\n            <EntitiesPage\r\n                data={filteredData}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default connect(state => ({\r\n    data: state.data,\r\n    main: state.main\r\n}))(EntitiesPageContainer);\r\n","import React from 'react'\r\nimport './Loader.css'\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Loader from '../Loader/Loader'\r\n\r\nconst isEmpty = (prop) => (\r\n    prop === null || prop === undefined ||\r\n    (prop.hasOwnProperty('length') && prop.length === 0) ||\r\n    (prop.constructor === Object && Object.keys(prop).length === 0)\r\n);\r\n\r\nconst LoadingHOC = (loadingProp) => (WrappedComponent) => {\r\n    return class LoadingHOC extends Component {\r\n        render() {\r\n            return isEmpty(this.props[loadingProp]) ?\r\n                <Loader />\r\n                : <WrappedComponent {...this.props} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default LoadingHOC;","import React from 'react'\r\nimport './ErrorPage.css'\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            404<br/>\r\n            Page not found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react'\r\nimport './SingleEntityPage.css'\r\nconst SingleEntityPage = ({ fieldsToRender, getLinks, entity }) => {\r\n    return (\r\n        <div className=\"single-entity\">\r\n            {\r\n                Object.keys(fieldsToRender).map(field => {\r\n                    if (field === 'name') {\r\n                        return <h1 key={Math.random()} className=\"single-entity__main-title\">{entity[fieldsToRender[field]]}</h1>\r\n                    } else if (Array.isArray(entity[field])) {\r\n                        return (\r\n                            <div key={Math.random()}>\r\n                                {\r\n                                    entity[fieldsToRender[field]].length > 0 && <h2 key={Math.random()} className=\"single-entity__title\">{`${field}:`}</h2>\r\n                                }\r\n                                <div key={Math.random()} className=\"single-entity__container\">\r\n                                    {\r\n                                        getLinks(entity[fieldsToRender[field]])\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return <h2 key={Math.random()} className=\"single-entity__title\">{`${field}: ${entity[fieldsToRender[field]]}`}</h2>\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleEntityPage;","const fieldsToDisplay = {\r\n    films: {\r\n        name: 'title',\r\n        director: 'director',\r\n        producer: 'producer',\r\n        episode: 'episode_id',\r\n        date: 'release_date',\r\n        characters: 'characters',\r\n        planets: 'planets',\r\n        vehicles: 'vehicles',\r\n        starships: 'starships',\r\n        species: 'species'\r\n    },\r\n    people: {\r\n        name: 'name',\r\n        height: 'height',\r\n        mass: 'mass',\r\n        gender: 'gender',\r\n        'hair color': 'hair_color',\r\n        'skin color': 'skin_color',\r\n        'eye color': 'eye color',\r\n        'birth year': 'birth year',\r\n        films: 'films',\r\n        vehicles: 'vehicles',\r\n        starships: 'starships',\r\n        species: 'species',\r\n    },\r\n    planets: {\r\n        name: 'name',\r\n        diameter: 'diameter',\r\n        climate: 'climate',\r\n        population: 'population',\r\n        residents: 'residents',\r\n        films: 'films'\r\n    },\r\n    species: {\r\n        name: 'name',\r\n        classification: 'classification',\r\n        designation: 'designation',\r\n        language: 'language',\r\n        people: 'people',\r\n        films: 'films'\r\n    },\r\n    starships: {\r\n        name: 'name',\r\n        model: 'model',\r\n        manufacturer: 'manufacturer',\r\n        length: 'length',\r\n        passengers: 'passengers',\r\n        'starship class': 'starship_class',\r\n        pilots: 'pilots',\r\n        films: 'films'\r\n    },\r\n    vehicles: {\r\n        name: 'name',\r\n        model: 'model',\r\n        manufacturer: 'manufacturer',\r\n        passengers: 'passengers',\r\n        'max atmosphering speed': 'max_atmosphering_speed',\r\n        consumables: 'consumables',\r\n        pilots: 'pilots',\r\n        films: 'films'\r\n    }\r\n}\r\n\r\nexport default fieldsToDisplay;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport SingleEntityPage from './SingleEntityPage'\r\nimport { getId, getEntity } from '../../functions'\r\nimport { Link } from 'react-router-dom'\r\nimport fieldsToDisplay from '../../fields_to_display'\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\n\r\nclass SingleEntityPageContainer extends Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    componentDidUpdate() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    getLinks = (arr) => {\r\n        const { data } = this.props;\r\n        return arr.map(elem => {\r\n            let entity = getEntity(elem);\r\n            let id = getId(elem);\r\n            let obj = data[entity].find(elem => getId(elem.url) === id);\r\n            if (obj.title !== undefined) {\r\n                return (\r\n                    <Link className=\"single-entity__link\" key={obj.url + Math.random()} to={`/${entity}/${id}`}>{obj.title}</Link>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Link className=\"single-entity__link\" key={obj.url + Math.random()} to={`/${entity}/${id}`}>{obj.name}</Link>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { data } = this.props;\r\n        const { entity, id } = this.props.match.params;\r\n        let currentEntity = null;\r\n        if (data[entity] !== undefined) {\r\n            currentEntity = data[entity].find(elem => getId(elem.url) === id);\r\n        }\r\n        return (\r\n            <>\r\n                {\r\n                    currentEntity && <SingleEntityPage\r\n                        fieldsToRender={fieldsToDisplay[entity]}\r\n                        getLinks={this.getLinks}\r\n                        entity={data[entity].find(elem => getId(elem.url) === id)}\r\n                    />\r\n                }\r\n                {\r\n                    ((currentEntity === undefined) || (currentEntity === null)) && <ErrorPage />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default connect(state => ({\r\n    data: state.data,\r\n}))(SingleEntityPageContainer);\r\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { loadData } from './store/actions/dataActionCreator';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header'\nimport EntitiesPageContainer from './components/EntitiesPage/EntitiesPageContainer';\nimport LoadingHOC from './components/HOCs/LoadingHOC'\nimport ErrorPage from './components/ErrorPage/ErrorPage'\nimport './App.css'\nimport SingleEntityPageContainer from './components/SingleEntityPage/SingleEntityPageContainer';\nclass AppComponentUI extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={EntitiesPageContainer} />\n          <Route exact path='/:entity/:id' component={SingleEntityPageContainer} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\n\nconst AppComponent = LoadingHOC('data')(AppComponentUI);\n\nclass App extends Component {\n  componentDidMount() {\n    if (JSON.parse(localStorage.getItem('swapi')) === null) {\n      this.props.loadData();\n    }\n  }\n\n\n  render() {\n    return (\n      <AppComponent data={this.props.data} />\n    )\n  }\n}\n\nexport default connect(state => ({\n  data: state.data,\n}), {\n  loadData\n})(App);\n\n","import { LOAD_DATA } from '../constants';\r\n\r\n\r\nexport const loadData = () => async dispatch => {\r\n    const entities = ['people', 'films', 'vehicles', 'planets', 'starships', 'species'];\r\n    let people = [];\r\n    let films = [];\r\n    let vehicles = [];\r\n    let planets = [];\r\n    let starships = [];\r\n    let species = [];\r\n    for (let entity of entities) {\r\n        let isNotLastPage = true;\r\n        let pageNum = 1;\r\n        do {\r\n            let response = await fetch(`https://swapi.dev/api/${entity}/?page=${pageNum}`);\r\n            let data = await response.json()\r\n            let results = data.results\r\n            switch (entity) {\r\n                case 'films':\r\n                    films = films.concat(results)\r\n                    break;\r\n                case 'people':\r\n                    people = people.concat(results)\r\n                    break;\r\n                case 'vehicles':\r\n                    vehicles = vehicles.concat(results)\r\n                    break;\r\n                case 'planets':\r\n                    planets = planets.concat(results)\r\n                    break;\r\n                case 'starships':\r\n                    starships = starships.concat(results)\r\n                    break;\r\n                case 'species':\r\n                    species = species.concat(results)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (data.next === null) {\r\n                isNotLastPage = false;\r\n            }\r\n            pageNum++;\r\n\r\n        } while (isNotLastPage)\r\n    }\r\n    dispatch({\r\n        type: LOAD_DATA,\r\n        payload: {\r\n            people,\r\n            films,\r\n            vehicles,\r\n            planets,\r\n            starships,\r\n            species,\r\n        }\r\n    })\r\n};\r\n\r\n\r\n","import { LOAD_DATA,  } from '../constants';\r\nimport { load } from 'redux-localstorage-simple';\r\n\r\nlet DATA = load({ namespace: 'swapi' });\r\n\r\nif (!DATA || !DATA.data ) {\r\n    DATA = {\r\n        data: {},\r\n    }\r\n}\r\n\r\nexport default function (state = DATA.data, action) {\r\n    switch (action.type) {\r\n        case LOAD_DATA:\r\n            return {\r\n                ...state,\r\n                films: action.payload.films,\r\n                people: action.payload.people,\r\n                vehicles: action.payload.vehicles,\r\n                starships: action.payload.starships,\r\n                species: action.payload.species,\r\n                planets: action.payload.planets,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_SELECTED_ENTITY, SET_SEARCH_TEXT, SWITCH_SORT_ORDER} from '../constants';\r\n\r\nconst initialState = {\r\n    selectedEntity: 'films',\r\n    searchText: '',\r\n    sortOrderToHeight: true\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_SELECTED_ENTITY:\r\n            return {\r\n                ...state,\r\n                selectedEntity: action.payload\r\n            }\r\n        case SET_SEARCH_TEXT:\r\n            return {\r\n                ...state,\r\n                searchText: action.payload\r\n            }\r\n        case SWITCH_SORT_ORDER:\r\n            return {\r\n                ...state,\r\n                sortOrderToHeight: !state.sortOrderToHeight\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport data from './data';\r\nimport main from './main';\r\n\r\nconst rootReducer = combineReducers({ data, main });\r\n\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { save } from 'redux-localstorage-simple';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middleware = [save({ namespace: 'swapi'}), thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n\n"],"sourceRoot":""}